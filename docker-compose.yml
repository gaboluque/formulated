services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: formulated
      POSTGRES_USER: formulated_user
      POSTGRES_PASSWORD: formulated_pass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U formulated_user -d formulated"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./api:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://formulated_user:formulated_pass@db:5432/formulated
      - DJANGO_SECRET_KEY=django-insecure-1a0+sj0gr^e9)p!ue8c6l7_9$$ff-hjy+n7-bxkhn4=h3w_$$sr*
      - ALLOWED_HOSTS=localhost,127.0.0.1,api
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@formulated.com
      - DJANGO_SUPERUSER_PASSWORD=qwerty123
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py seed_data &&
             python manage.py runserver 0.0.0.0:8000"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - api

volumes:
  postgres_data: 